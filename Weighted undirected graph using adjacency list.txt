weighted directed graph using adjacency list


def addNode(v):
    if v in graph:
        print(v,"already available")
    else:
        graph[v]=[]
def show():
    for x in graph:
        print(x,":",graph[x])

def addEdge(n1,n2,w):
    if n1 not in graph:
        print("n1 not available")
    elif n2 not in graph:
        print("n2 not available")
    else:
        edge=[]
        edge.append(n2)
        edge.append(w)
        graph[n1].append(edge)
        edge1=[]
        edge.append(n1)
        edge.append(w)
        graph[n2].append(edge1)
graph={}
while True:
    print()
    print("1.add Node \n2. Add Edge \n 3.print List \n4.exit")
    ch=int(input("choice"))
    if ch==1:
        v=input("enter Node")
        addNode(v)
    elif ch==2:
        n1=input("enter node")
        n2=input("enter node")
        w=input("enter weight")
        addEdge(n1,n2,w)
    elif ch==3:
        show()
    elif ch==4:
        break
    else:
        print("invalid choice")
        
        
        
