
TRAVERSAL TECHNIQUES_INORDER<PREORDER,POSTORDER


class node:
    def __init__(self,x):
        self.left=self.right=None
        self.data=x
    def insert(self,x):
        if self.data==None:
            self.data=x
            return
        if self.data>x:
            if self.left==None:
                self.left=node(x)
            else:
                self.left.insert(x)
        else:
            if self.right== None:
                self.right=node(x)
            else:
                self.right.insert(x)
    def show(self):
        if self.left:
            self.left.show()
        print(self.data,end=" ")
        if self.right:
            self.right.show()
    def preorder(self):
        print(self.data,end=" ")
        if self.left:
            self.left.preorder()
        if self.right:
            self.right.preorder()
    def inorder(self):
        if self.left:
            self.left.inorder()
        print(self.data,end=" ")
        if self.right:
            self.right.inorder()
    def postorder(self):
        if self.left:
            self.left.postorder()
        if self.right:
            self.right.postorder()
        print(self.data,end=" ")
            
root=node(40)
while True:
        print()
        print("1.insert\n2.show\n3.exit\n4.preorder\n5.inorder\n6.postorder")
        ch=int(input("enter choice\n"))
        if ch==1:
            x=int(input("element"))
            root.insert(x)
        elif ch==2:
            root.show()
        elif ch==3:
            break
        elif ch==4:
             root.preorder()
        elif ch==5:
            root.inorder()
        elif ch==6:
            root.postorder()
        else:
            print("invalid")